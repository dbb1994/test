{"name": "test_get_record_1[短视频]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'FAIL' == 'SUCCESS'\n  - SUCCESS\n  + FAIL", "trace": "self = <test_case.test_playrecord.TestHistory object at 0x10aa19cc0>\ngetHost = 'http://test.mv3.tv.mitvos.com', page_no = 1, video_type = 2\n\n    @allure.story(\"获取播放历史测试 - 数据正确性校验\")\n    @pytest.mark.Get_Record\n    @pytest.mark.parametrize(\"page_no,video_type\",[(0,0),(2,1),(1,2)],ids=['全部视频','长视频','短视频'])\n    def test_get_record_1(self, getHost,page_no,video_type):\n        base_url = getHost + self.api + 'get_record'\n        params = {\n            'page_no': page_no,\n            'video_type':video_type,\n            '_session': 'KRVCks2TzQz5_IS-u7rRzBAg2kAbg4rdsYVTSwWTJA9r5byziNvDPLLnJvNp75boPK5AB1ivRb2pgEV-TbWvzA=='\n        }\n        res = handle_request.run_main('GET',url = base_url,params = params,headers = self.headers)\n        res = json.loads(res.text)\n        result = check_json_incom(res,'record/get_record')\n>       assert result == 'SUCCESS'\nE       AssertionError: assert 'FAIL' == 'SUCCESS'\nE         - SUCCESS\nE         + FAIL\n\ntest_case/test_playrecord.py:36: AssertionError"}, "parameters": [{"name": "page_no", "value": "1"}, {"name": "video_type", "value": "2"}], "start": 1608444673026, "stop": 1608444673108, "uuid": "2807b336-55db-47d6-9b0f-c27e5556d1af", "historyId": "d06a67da9b0b95eb13649c06dfa01a49", "testCaseId": "24ef6634af8dda2dd0dd685973b80127", "fullName": "test_case.test_playrecord.TestHistory#test_get_record_1", "labels": [{"name": "story", "value": "获取播放历史测试 - 数据正确性校验"}, {"name": "tag", "value": "Get_Record"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_playrecord"}, {"name": "subSuite", "value": "TestHistory"}, {"name": "host", "value": "bogon"}, {"name": "thread", "value": "49860-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_playrecord"}]}